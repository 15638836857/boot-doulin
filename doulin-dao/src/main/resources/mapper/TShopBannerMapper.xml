<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doulin.mapper.TShopBannerMapper">

    <resultMap id="BaseResultMap" type="com.doulin.entity.TShopBanner">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="shop_home_code" property="shopHomeCode" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="INTEGER"/>
        <result column="add_dt" property="addDt" jdbcType="TIMESTAMP"/>
        <result column="edit_dt" property="editDt" jdbcType="TIMESTAMP"/>
        <result column="add_by" property="addBy" jdbcType="VARCHAR"/>
        <result column="edit_by" property="editBy" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="click_count" property="clickCount" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
    </resultMap>


    <sql id="Base_Column_List">
        id, shop_home_code, url, del_flag, add_dt, edit_dt,add_by,edit_by,status,click_count,sort,title
    </sql>
    <sql id="TBase_Column_List">
        t.id,
        t.shop_home_code,
        t.url,
        t.del_flag,
        t.add_dt,
        t.edit_dt,
        t.add_by,
        t.edit_by,
        t.title,
        t.`STATUS`,t2.shop_home_name,t.click_count,t.sort
    </sql>


    <select id="findByQuery" resultType="com.doulin.entity.TShopBanner">
        select
        <include refid="Base_Column_List"/>
        from t_shop_banner
        <where>
            <if test="query !=null">

            </if>
        </where>
    </select>

    <select id="selectPageList" parameterType="java.util.Map" resultMap="BaseResultMap">
       SELECT  td.*
        FROM
            (
                SELECT
                    (@i :=@i + 1) AS item,
                    tt.*
                FROM
                    (
                        SELECT
                           <include refid="TBase_Column_List"/>
                        FROM
                            `t_shop_banner` t
                        LEFT JOIN t_shop_home_base_info t2 ON t.shop_home_code = t2.shop_home_code
                        WHERE
                            t2.del_flag = 0
                        AND t.del_flag=0
                        <if test="value!='' and value!=null"> AND t2.shop_home_name LIKE '%${shopHomeName}%'</if>
                        order by t.sort
                    ) tt,
                    (SELECT @i := 0) AS it
            ) td
        <if test="page != null and rows != null">
            <bind name="key_offset" value="(page-1)*rows"></bind>
            LIMIT #{key_offset},#{rows}
        </if>
    </select>
    <select id="selectPageCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(tt.id)
        FROM
         (
            SELECT
               <include refid="TBase_Column_List"/>
            FROM
               `t_shop_banner` t
            LEFT JOIN t_shop_home_base_info t2 ON t.shop_home_code = t2.shop_home_code
            WHERE  t2.del_flag = 0
              AND t.del_flag=0
                <if test="value!='' and value!=null"> AND t2.shop_home_name LIKE '%${shopHomeName}%'</if>
         ) tt
    </select>
    <select id="selectInfoByCommunityCode" parameterType="String" resultMap="BaseResultMap">
                SELECT
                   DISTINCT
                   tt.id,
                   tt.title,
                   tt.click_count,
                   tt.url,
                   t1.shop_home_code
                FROM
                    t_shop_banner tt
                LEFT JOIN get_shop_community_view t1 ON tt.shop_home_code=t1.shop_home_code
                WHERE
                    tt.del_flag = 0
                    and tt.status='Y'
                    and t1.community_code=#{communityCode}
    </select>
</mapper>
