<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doulin.mapper.SysDictValueMapper">

    <resultMap id="BaseResultMap" type="com.doulin.entity.SysDictValue">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="type_code" property="typeCode" jdbcType="VARCHAR"/>
        <result column="type_name" property="typeName" jdbcType="VARCHAR"/>
        <result column="label" property="label" jdbcType="VARCHAR"/>
        <result column="value" property="value" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="INTEGER"/>
        <result column="add_by" property="addBy" jdbcType="VARCHAR"/>
        <result column="add_dt" property="addDt" jdbcType="TIMESTAMP"/>
        <result column="edit_by" property="editBy" jdbcType="VARCHAR"/>
        <result column="edit_dt" property="editDt" jdbcType="TIMESTAMP"/>
    </resultMap>


    <sql id="Base_Column_List">
        id, type_code, label, value, sort, remark, del_flag, add_by, add_dt, edit_by, edit_dt
    </sql>
    <sql id="Base_tColumn_List">
            t.id, t.type_code, t.label, t.value, t.sort, t.remark, t.del_flag, t.add_by, t.add_dt, t.edit_by, t.edit_dt
    </sql>


    <select id="findByQuery" resultType="com.doulin.entity.SysDictValue">
        select
        <include refid="Base_Column_List"/>
        from sys_dict_value
        <where>
            <if test="query !=null">

            </if>
        </where>
    </select>
    <select id="selectByTypeCodes" parameterType="java.util.List" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from sys_dict_value where
        del_flag=0
        AND type_code
        in
        <foreach collection="typeCodes" index="code" open="(" separator="," close=")">
            #{code}
        </foreach>
        ORDER BY sort asc
    </select>
    <select id="selectByTypeIds" parameterType="java.util.List" resultMap="BaseResultMap">
        select <include refid="Base_tColumn_List"/>  FROM
        ( SELECT b.type_code
            FROM  sys_dict_type b
           WHERE
            EXISTS ( SELECT c.type_code  FROM sys_dict_type c
                     WHERE c.id IN
                     <foreach collection="typeIds" index="id" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                   )
           ) d
        LEFT JOIN sys_dict_value t ON d.type_code = t.type_code
        WHERE  t.del_flag = 0
        ORDER BY t.sort asc
    </select>
    <select id="selectListByTypeCodeOrValue" resultMap="BaseResultMap">
           SELECT
                <include refid="Base_tColumn_List"/>
            FROM
                sys_dict_value t
            WHERE
                t.del_flag = 0
            <if test="typeCode!='' and typeCode!=null">AND t.type_code=#{typeCode}</if>
            <if test="value!='' and value!=null">AND t.`value`=#{value}</if>
        ORDER BY t.sort asc
    </select>
    <select id="selectListByIds" parameterType="java.util.Arrays" resultMap="BaseResultMap">
        SELECT
            t.id,
            t.type_code,
           (SELECT b.type_name from sys_dict_type b where b.del_flag=0 and b.type_code=t.type_code) type_name,
            t.label,
            t.`value`,
            t.sort,
            t.remark,
            t.del_flag,
            t.add_by,
            t.add_dt,
            t.edit_by,
            t.edit_dt
        FROM
            sys_dict_value t
        WHERE
            t.del_flag = 0
           AND t.id in
           <foreach collection="ids" index="id" open="(" separator="," close=")" item="id">
               #{id}
           </foreach>
        ORDER BY t.type_code asc,t.sort asc
    </select>
</mapper>
